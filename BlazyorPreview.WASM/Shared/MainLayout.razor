@inherits LayoutComponentBase
@using Blazyor.Layouts
@using System.ComponentModel
@using Blazyor.Components.Abstractions

@switch (layout){
    case LayoutStyle.Linear:
        {
            <BlazyLinearLayout>
                <TopRowFragment>
                    @TopRowFragment()
                </TopRowFragment>
                <NavFragment>        
                    <div class="top-nav-wrapper">
                        <BlazyTopNav Links="@Links" />
                    </div>
                </NavFragment>
                <BodyFragment>
                    @Body
                </BodyFragment>
            </BlazyLinearLayout>
        }
        break;
    case LayoutStyle.SideNav:
        {
            <BlazySideNavLayout>
                <TopRowFragment>
                    @TopRowFragment()
                </TopRowFragment>
                <NavFragment>        
                    <div class="side-nav-wrapper">
                        <BlazySideNav Links="@Links" HeaderText="Blazy Components" />
                    </div>
                </NavFragment>
                <BodyFragment>
                    @Body
                </BodyFragment>
            </BlazySideNavLayout>            
        }
        break;
}

@code {
    RenderFragment TopRowFragment() {
        return __builder =>
        {        
            <div class="top-row">
                <Blazyor.Fragments.BlazyLogo />
                <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>
        };
    }

    protected override void OnInitialized()
    {
        Links = new BlazyNavMenu.BlazyNavLink[]
            {
            new () {Text = "HOME", Href = ""},
            new () {Text = "LAYOUTS", Sublinks = new BlazyNavMenu.BlazyNavLink[]
                {
                    new () {Text = "Linear Layout", OnClick = () => SetLayout(LayoutStyle.Linear) },
                    new () {Text = "Side Nav Layout", OnClick = () => SetLayout(LayoutStyle.SideNav)},
                    new () {Text = "LAYOUTS", Sublinks = new BlazyNavMenu.BlazyNavLink[]
                        {
                            new () {Text = "Linear Layout", OnClick = () => SetLayout(LayoutStyle.Linear) },
                            new () {Text = "Side Nav Layout", OnClick = () => SetLayout(LayoutStyle.SideNav)},
                    new () {Text = "LAYOUTS", Sublinks = new BlazyNavMenu.BlazyNavLink[]
                        {
                            new () {Text = "Linear Layout", OnClick = () => SetLayout(LayoutStyle.Linear) },
                            new () {Text = "Side Nav Layout", OnClick = () => SetLayout(LayoutStyle.SideNav)},
                    new () {Text = "LAYOUTS", Sublinks = new BlazyNavMenu.BlazyNavLink[]
                        {
                            new () {Text = "Linear Layout", OnClick = () => SetLayout(LayoutStyle.Linear) },
                            new () {Text = "Side Nav Layout", OnClick = () => SetLayout(LayoutStyle.SideNav)},
                        }
                    },
                        }
                    },
                        }
                    },
                }
            },
            new () {Text = "BUTTONS", Href = "buttons"},
            new () {Text = "MODALS", Href = "modals"},
            new () {Text = "DATAGRID", Href = "datagrid"},
            new () {Text = "STEPPER", Href = "stepper"},
            new () {Text = "CODEBOX", Href = "codebox"},
            new () {Text = "NAVMENU", Href = "navmenu"},
        };

        base.OnInitialized();
    }

    BlazyNavMenu.BlazyNavLink[] Links = new BlazyNavMenu.BlazyNavLink[0];

    public enum LayoutStyle
    {
        [Description("BlazySideNavLayout")] SideNav,
        [Description("BlazyLinearLayout")] Linear
    }

    LayoutStyle layout = LayoutStyle.Linear;

    void SetLayout(LayoutStyle style)
    {
        layout = style;
        StateHasChanged();
    }
}