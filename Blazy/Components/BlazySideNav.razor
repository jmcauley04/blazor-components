@using Microsoft.AspNetCore.Components.Routing
@inherits BlazyNavMenu

<div class="wrapper">    
    <div>        
        <h5>@HeaderText</h5>
        <div class="menu-icon">
            <BlazyButton OnClick="ToggleOpen">
                <BlazyIcon Icon="BlazyIcon.IconType.oi_menu" />
            </BlazyButton>
        </div>
    </div>
    <div class="menu-list @(isOpen ? "visible" : "")">
        @RenderLink(Links)
    </div>

</div>

@code {
    [Parameter]
    public string HeaderText { get; set; } = string.Empty;

    bool isOpen = false;

    void ToggleOpen()
    {
        isOpen = !isOpen;
    }
    
    RenderFragment RenderLink(IEnumerable<BlazyNavLink> links) {
        return __builder =>
        {
            <ul @onclick:stopPropagation>
                @foreach (var lm in links)
                {
                    if (lm.Sublinks == null && lm.OnClick == null)
                    {
                        <li class="nav-item">            
                            <NavLink class="nav-link" href="@lm.Href" Match="@lm.LinkMatch">
                                <span class="label">@lm.Text</span>
                            </NavLink>
                        </li>
                    }
                    else if (lm.Sublinks == null && lm.OnClick != null)
                    {
                        <li class="nav-item" @onclick="@(() => lm.OnClick!.Invoke())">            
                            <NavLink class="nav-link" Match="@lm.LinkMatch">
                                <span class="label">@lm.Text</span>
                            </NavLink>
                        </li>                    
                    }
                    else
                    {
                        <li class="nav-item" @onclick="() => lm.IsOpen = !lm.IsOpen"> 
                            <NavLink class="nav-link">
                                <span class="label">@lm.Text</span> <BlazyIcon Icon="BlazyIcon.IconType.oi_caret_bottom" />
                            </NavLink>
                            <BlazyHeightTransition Collapsed="!lm.IsOpen">
                                <div class="sublinks">
                                    @RenderLink(lm.Sublinks!)
                                </div>
                            </BlazyHeightTransition>
                        </li>
                    }

                }
        </ul>
        };
    }
}