@inherits BlazyBase

<button 
    class="@btnClass @CssClass" 
    style="@CssStyle"
    type="@Type"
    disabled="@(isLoading || Disabled)"
    @onclick="onClick" >

    @if(ChildContent != null)
    {
        @ChildContent
    }

</button>

@code {
    public enum ButtonType
    {
        Button,
        Submit,
        Reset
    }

    public enum ButtonStyle
    {
        Transparent,
        Primary,
        Secondary,
        Success,
        Danger,
        Warning,
        Info,
        Light,
        Dark
    }

    [Parameter]
    public ButtonType Type { get; set; } = ButtonType.Button;

    [Parameter]
    public ButtonStyle Style { get; set; } = ButtonStyle.Transparent;

    [Parameter]
    public bool Outline { get; set; } = false;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private string btnClass => $"btn btn-{(Outline ? "outline-" : string.Empty)}{Style.ToString().ToLower()}";

    private bool isLoading;

    private async Task onClick()
    {
        if (isLoading)
            return;

        try
        {
            isLoading = true;
            await OnClick.InvokeAsync();
        }
        finally
        {
            isLoading = false;
        }
    }
}
