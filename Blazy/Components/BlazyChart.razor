@using Microsoft.JSInterop
@using Blazy.Utility
@using System.Runtime.CompilerServices
@using Blazy.Components.Charts

<CascadingValue Value="@Start" Name="Start">
<CascadingValue Value="@Size" Name="Size">
<CascadingValue Value="@View" Name="View">


<figure class="position-relative">
    <figcaption>
        @ChartTitle
    </figcaption>
    <svg class="graph"
        xmlns="http://www.w3.org/2000/svg" 
        xmlns:xlink="http://www.w3.org/1999/xlink" 
        viewBox="0 0 1600 800"
        style="border: 1px solid black;">    
                
        <Axes
            XAxisTitle="@XAxisTitle" 
            YAxisTitle="@YAxisTitle" />

        <ChartArea 
            Data="@Data"
            ShowLabels="@ShowLabels"
            ViewChanged="@UpdateView" />      

    </svg>
    <div class="actions-list">        
        <span class="reset-button" @onclick="ResetZoom" hidden="@(View.Equals(new(Start,Start + Size)))">        
            <BlazyIcon Icon="BlazyIcon.IconType.oi_resize_both" />
        </span>
    </div>

</figure>

</CascadingValue>
</CascadingValue>
</CascadingValue>
@code {
    [Parameter]
    public string ChartTitle { get; set; } = string.Empty;

    [Parameter]
    public string XAxisTitle { get; set; } = string.Empty;

    [Parameter]
    public string YAxisTitle{ get; set; } = string.Empty;

    [Parameter]
    public Point? SelectedPoint { get; set; }

    [Parameter]
    public EventCallback<Point> SelectedPointChanged { get; set; }

    [Parameter, EditorRequired]
    public IEnumerable<Point>? Data { get; set; }

    [Parameter]
    public Point Start { get; set; } = new Point(0, 0);

    [Parameter]
    public Point Size { get; set; } = new Point(0, 0);

    public Rectangle View { get; set; }

    [Parameter]
    public bool ShowLabels { get; set; }

    double labelOffsetX(string label) => label.Length * 2.7f;

    protected override void OnInitialized()
    {
        Start ??= new Point(
            Data.Select(x => x.X).Min(), 
            Data.Select(x => x.Y).Min());

        Size ??= new Point(
            Data.Select(x => x.X).Max() - Start.X,
            Data.Select(x => x.Y).Max() - Start.Y);

        View = new(Start, Start + Size);

        base.OnInitialized();
    }

    void ResetZoom()
    {
        View = new(Start, Start + Size);
    }

    void UpdateView(Rectangle newView) => View = newView;
}
